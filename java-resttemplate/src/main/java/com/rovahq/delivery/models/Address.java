package com.rovahq.delivery.models;
/*
 * Overview ROVA Dispatch API
 * Integrate with ROVA's robust API to power your business with more efficient on demand deliveries. A few lines of code will allow your deliveries to access ROVAâ€™s courier network programmatically leaving you to focus on your unique business needs.</p><p>Here you will find information on how to setup the API integration.</p><p>Have questions? Reach out to us <a href=\"mailto:support@rovahq.com\">support@rovahq.com</a>
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;

/**
 * Address
 */
public class Address {
    @JsonProperty("name")
    private String name = null;

    @JsonProperty("name2")
    private String name2 = null;

    @JsonProperty("company")
    private String company = null;

    @JsonProperty("city")
    private String city = null;

    @JsonProperty("address")
    private String address = null;

    @JsonProperty("address2")
    private String address2 = null;

    @JsonProperty("postal_code")
    private String postalCode = null;

    @JsonProperty("locality")
    private String locality = null;

    @JsonProperty("phone")
    private String phone = null;

    @JsonProperty("instructions")
    private String instructions = null;

    public Address name(String name) {
        this.name = name;
        return this;
    }

    /**
     * Get name
     *
     * @return name
     **/
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public Address name2(String name2) {
        this.name2 = name2;
        return this;
    }

    /**
     * optional field
     *
     * @return name2
     **/
    @JsonProperty("name2")
    public String getName2() {
        return name2;
    }

    public void setName2(String name2) {
        this.name2 = name2;
    }

    public Address company(String company) {
        this.company = company;
        return this;
    }

    /**
     * optional field
     *
     * @return company
     **/
    @JsonProperty("company")
    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    public Address city(String city) {
        this.city = city;
        return this;
    }

    /**
     * Get city
     *
     * @return city
     **/
    @JsonProperty("city")
    public String getCity() {
        return city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    public Address address(String address) {
        this.address = address;
        return this;
    }

    /**
     * Get address
     *
     * @return address
     **/
    @JsonProperty("address")
    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public Address address2(String address2) {
        this.address2 = address2;
        return this;
    }

    /**
     * optional field
     *
     * @return address2
     **/
    @JsonProperty("address2")
    public String getAddress2() {
        return address2;
    }

    public void setAddress2(String address2) {
        this.address2 = address2;
    }

    public Address postalCode(String postalCode) {
        this.postalCode = postalCode;
        return this;
    }

    /**
     * optional field
     *
     * @return postalCode
     **/
    @JsonProperty("postal_code")
    public String getPostalCode() {
        return postalCode;
    }

    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    public Address locality(String locality) {
        this.locality = locality;
        return this;
    }

    /**
     * optional field
     *
     * @return locality
     **/
    @JsonProperty("locality")
    public String getLocality() {
        return locality;
    }

    public void setLocality(String locality) {
        this.locality = locality;
    }

    public Address phone(String phone) {
        this.phone = phone;
        return this;
    }

    /**
     * Get phone
     *
     * @return phone
     **/
    @JsonProperty("phone")
    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    public Address instructions(String instructions) {
        this.instructions = instructions;
        return this;
    }

    /**
     * optional field
     *
     * @return instructions
     **/
    @JsonProperty("instructions")
    public String getInstructions() {
        return instructions;
    }

    public void setInstructions(String instructions) {
        this.instructions = instructions;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Address address = (Address) o;
        return Objects.equals(this.name, address.name) &&
                Objects.equals(this.name2, address.name2) &&
                Objects.equals(this.company, address.company) &&
                Objects.equals(this.city, address.city) &&
                Objects.equals(this.address, address.address) &&
                Objects.equals(this.address2, address.address2) &&
                Objects.equals(this.postalCode, address.postalCode) &&
                Objects.equals(this.locality, address.locality) &&
                Objects.equals(this.phone, address.phone) &&
                Objects.equals(this.instructions, address.instructions);
    }

    @Override
    public int hashCode() {
        return Objects.hash(name, name2, company, city, address, address2, postalCode, locality, phone, instructions);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Address {\n");

        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    name2: ").append(toIndentedString(name2)).append("\n");
        sb.append("    company: ").append(toIndentedString(company)).append("\n");
        sb.append("    city: ").append(toIndentedString(city)).append("\n");
        sb.append("    address: ").append(toIndentedString(address)).append("\n");
        sb.append("    address2: ").append(toIndentedString(address2)).append("\n");
        sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
        sb.append("    locality: ").append(toIndentedString(locality)).append("\n");
        sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
        sb.append("    instructions: ").append(toIndentedString(instructions)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}


