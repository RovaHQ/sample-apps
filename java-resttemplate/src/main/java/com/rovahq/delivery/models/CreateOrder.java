package com.rovahq.delivery.models;
/*
 * Overview ROVA Dispatch API
 * Integrate with ROVA's robust API to power your business with more efficient on demand deliveries. A few lines of code will allow your deliveries to access ROVAâ€™s courier network programmatically leaving you to focus on your unique business needs.</p><p>Here you will find information on how to setup the API integration.</p><p>Have questions? Reach out to us <a href=\"mailto:support@rovahq.com\">support@rovahq.com</a>
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import javax.validation.constraints.Min;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CreateOrder
 */
public class CreateOrder {

    @JsonProperty("pickUpDateTime")
    private String pickUpDateTime = null;

    @JsonProperty("pickUpAddress")
    private Address pickUpAddress = null;

    @JsonProperty("shipToAddress")
    private Address shipToAddress = null;

    @JsonProperty("items")
    private List<Item> items = null;

    @JsonProperty("tips")
    private BigDecimal tips = null;

    @JsonProperty("readyBy")
    private String readyBy = null;

    @JsonProperty("deliveryWindowStart")
    private String deliveryWindowStart = null;

    @JsonProperty("deliveryWindowEnd")
    private String deliveryWindowEnd = null;

    @JsonProperty("ageRequired")
    private Integer ageRequired = null;

    @JsonProperty("deliveryCategory")
    private String deliveryCategory = null;

    @JsonProperty("vehicleType")
    private String vehicleType = null;

    /**
     * Gets or Sets customerSignatureType
     */
    public enum CustomerSignatureTypeEnum {
        ANY("any"),

        NONE("none");

        private String value;

        CustomerSignatureTypeEnum(String value) {
            this.value = value;
        }

        @Override
        @JsonValue
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static CustomerSignatureTypeEnum fromValue(String text) {
            for (CustomerSignatureTypeEnum b : CustomerSignatureTypeEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("customerSignatureType")
    private CustomerSignatureTypeEnum customerSignatureType = null;

    @JsonProperty("webhookUrl")
    private String webhookUrl = null;

    @JsonProperty("orderReferenceId")
    private String orderReferenceId = null;

    public CreateOrder pickUpDateTime(String pickUpDateTime) {
        this.pickUpDateTime = pickUpDateTime;
        return this;
    }

    /**
     * ISO8601 datetime string
     *
     * @return pickUpDateTime
     **/
    @JsonProperty("pickUpDateTime")
    public String getPickUpDateTime() {
        return pickUpDateTime;
    }

    public void setPickUpDateTime(String pickUpDateTime) {
        this.pickUpDateTime = pickUpDateTime;
    }

    public CreateOrder pickUpAddress(Address pickUpAddress) {
        this.pickUpAddress = pickUpAddress;
        return this;
    }

    /**
     * Get pickUpAddress
     *
     * @return pickUpAddress
     **/
    @JsonProperty("pickUpAddress")
    public Address getPickUpAddress() {
        return pickUpAddress;
    }

    public void setPickUpAddress(Address pickUpAddress) {
        this.pickUpAddress = pickUpAddress;
    }

    public CreateOrder shipToAddress(Address shipToAddress) {
        this.shipToAddress = shipToAddress;
        return this;
    }

    /**
     * Get shipToAddress
     *
     * @return shipToAddress
     **/
    @JsonProperty("shipToAddress")
    public Address getShipToAddress() {
        return shipToAddress;
    }

    public void setShipToAddress(Address shipToAddress) {
        this.shipToAddress = shipToAddress;
    }

    public CreateOrder items(List<Item> items) {
        this.items = items;
        return this;
    }

    public CreateOrder addItemsItem(Item itemsItem) {
        if (this.items == null) {
            this.items = new ArrayList<Item>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Get items
     *
     * @return items
     **/
    @JsonProperty("items")
    public List<Item> getItems() {
        return items;
    }

    public void setItems(List<Item> items) {
        this.items = items;
    }

    public CreateOrder tips(BigDecimal tips) {
        this.tips = tips;
        return this;
    }

    /**
     * Get tips
     *
     * @return tips
     **/
    @JsonProperty("tips")
    public BigDecimal getTips() {
        return tips;
    }

    public void setTips(BigDecimal tips) {
        this.tips = tips;
    }

    public CreateOrder readyBy(String readyBy) {
        this.readyBy = readyBy;
        return this;
    }

    /**
     * ISO8601 datetime string
     *
     * @return readyBy
     **/
    @JsonProperty("readyBy")
    public String getReadyBy() {
        return readyBy;
    }

    public void setReadyBy(String readyBy) {
        this.readyBy = readyBy;
    }

    public CreateOrder deliveryWindowStart(String deliveryWindowStart) {
        this.deliveryWindowStart = deliveryWindowStart;
        return this;
    }

    /**
     * ISO8601 datetime string
     *
     * @return deliveryWindowStart
     **/
    @JsonProperty("deliveryWindowStart")
    public String getDeliveryWindowStart() {
        return deliveryWindowStart;
    }

    public void setDeliveryWindowStart(String deliveryWindowStart) {
        this.deliveryWindowStart = deliveryWindowStart;
    }

    public CreateOrder deliveryWindowEnd(String deliveryWindowEnd) {
        this.deliveryWindowEnd = deliveryWindowEnd;
        return this;
    }

    /**
     * ISO8601 datetime string
     *
     * @return deliveryWindowEnd
     **/
    @JsonProperty("deliveryWindowEnd")
    public String getDeliveryWindowEnd() {
        return deliveryWindowEnd;
    }

    public void setDeliveryWindowEnd(String deliveryWindowEnd) {
        this.deliveryWindowEnd = deliveryWindowEnd;
    }

    public CreateOrder ageRequired(Integer ageRequired) {
        this.ageRequired = ageRequired;
        return this;
    }

    /**
     * Get ageRequired
     * minimum: 0
     *
     * @return ageRequired
     **/
    @JsonProperty("ageRequired")
    @Min(0)
    public Integer getAgeRequired() {
        return ageRequired;
    }

    public void setAgeRequired(Integer ageRequired) {
        this.ageRequired = ageRequired;
    }

    public CreateOrder customerSignatureType(CustomerSignatureTypeEnum customerSignatureType) {
        this.customerSignatureType = customerSignatureType;
        return this;
    }

    /**
     * Get customerSignatureType
     *
     * @return customerSignatureType
     **/
    @JsonProperty("customerSignatureType")
    public CustomerSignatureTypeEnum getCustomerSignatureType() {
        return customerSignatureType;
    }

    public void setCustomerSignatureType(CustomerSignatureTypeEnum customerSignatureType) {
        this.customerSignatureType = customerSignatureType;
    }

    public CreateOrder webhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
        return this;
    }

    /**
     * Get webhookUrl
     *
     * @return webhookUrl
     **/
    @JsonProperty("webhookUrl")
    public String getWebhookUrl() {
        return webhookUrl;
    }

    public void setWebhookUrl(String webhookUrl) {
        this.webhookUrl = webhookUrl;
    }

    public CreateOrder orderReferenceId(String orderReferenceId) {
        this.orderReferenceId = orderReferenceId;
        return this;
    }

    /**
     * Get orderReferenceId
     *
     * @return orderReferenceId
     **/
    @JsonProperty("orderReferenceId")
    public String getOrderReferenceId() {
        return orderReferenceId;
    }

    public void setOrderReferenceId(String orderReferenceId) {
        this.orderReferenceId = orderReferenceId;
    }

    public CreateOrder deliveryCategory(String deliveryCategory) {
        this.deliveryCategory = deliveryCategory;
        return this;
    }

    @JsonProperty("deliveryCategory")
    public String getDeliveryCategory() {
        return deliveryCategory;
    }

    public void setDeliveryCategory(String deliveryCategory) {
        this.deliveryCategory = deliveryCategory;
    }

    @JsonProperty("vehicleType")
    public String getVehicleType() {
        return vehicleType;
    }

    public void setVehicleType(String vehicleType) {
        this.vehicleType = vehicleType;
    }

    public CreateOrder vehicleType(String vehicleType) {
        this.vehicleType = vehicleType;
        return this;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateOrder createOrder = (CreateOrder) o;
        return Objects.equals(this.pickUpDateTime, createOrder.pickUpDateTime) &&
                Objects.equals(this.pickUpAddress, createOrder.pickUpAddress) &&
                Objects.equals(this.shipToAddress, createOrder.shipToAddress) &&
                Objects.equals(this.items, createOrder.items) &&
                Objects.equals(this.tips, createOrder.tips) &&
                Objects.equals(this.readyBy, createOrder.readyBy) &&
                Objects.equals(this.deliveryWindowStart, createOrder.deliveryWindowStart) &&
                Objects.equals(this.deliveryWindowEnd, createOrder.deliveryWindowEnd) &&
                Objects.equals(this.ageRequired, createOrder.ageRequired) &&
                Objects.equals(this.customerSignatureType, createOrder.customerSignatureType) &&
                Objects.equals(this.webhookUrl, createOrder.webhookUrl) &&
                Objects.equals(this.orderReferenceId, createOrder.orderReferenceId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(pickUpDateTime, pickUpAddress, shipToAddress, items, tips, readyBy, deliveryWindowStart, deliveryWindowEnd, ageRequired, customerSignatureType, webhookUrl, orderReferenceId);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CreateOrder {\n");

        sb.append("    pickUpDateTime: ").append(toIndentedString(pickUpDateTime)).append("\n");
        sb.append("    pickUpAddress: ").append(toIndentedString(pickUpAddress)).append("\n");
        sb.append("    shipToAddress: ").append(toIndentedString(shipToAddress)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    tips: ").append(toIndentedString(tips)).append("\n");
        sb.append("    readyBy: ").append(toIndentedString(readyBy)).append("\n");
        sb.append("    deliveryWindowStart: ").append(toIndentedString(deliveryWindowStart)).append("\n");
        sb.append("    deliveryWindowEnd: ").append(toIndentedString(deliveryWindowEnd)).append("\n");
        sb.append("    ageRequired: ").append(toIndentedString(ageRequired)).append("\n");
        sb.append("    customerSignatureType: ").append(toIndentedString(customerSignatureType)).append("\n");
        sb.append("    webhookUrl: ").append(toIndentedString(webhookUrl)).append("\n");
        sb.append("    orderReferenceId: ").append(toIndentedString(orderReferenceId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
