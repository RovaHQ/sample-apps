package com.rovahq.delivery.models;
/*
 * Overview ROVA Dispatch API
 * Integrate with ROVA's robust API to power your business with more efficient on demand deliveries. A few lines of code will allow your deliveries to access ROVAâ€™s courier network programmatically leaving you to focus on your unique business needs.</p><p>Here you will find information on how to setup the API integration.</p><p>Have questions? Reach out to us <a href=\"mailto:support@rovahq.com\">support@rovahq.com</a>
 *
 * OpenAPI spec version: 2.0.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


import com.fasterxml.jackson.annotation.JsonProperty;

import java.math.BigDecimal;
import java.util.Objects;

/**
 * Quote
 */
public class Quote {
    @JsonProperty("id")
    private String id = null;

    @JsonProperty("cost")
    private BigDecimal cost = null;

    @JsonProperty("estimatedAt")
    private String estimatedAt = null;

    @JsonProperty("pickUpDateTime")
    private String pickUpDateTime = null;

    @JsonProperty("pickUpAddressId")
    private Integer pickUpAddressId = null;

    @JsonProperty("pickUpAddress")
    private Address pickUpAddress = null;

    @JsonProperty("shipToAddress")
    private Address shipToAddress = null;

    @JsonProperty("shipToAddressId")
    private Integer shipToAddressId = null;

    public Quote id(String id) {
        this.id = id;
        return this;
    }

    /**
     * quote id
     *
     * @return id
     **/
    @JsonProperty("id")
    String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Quote cost(BigDecimal cost) {
        this.cost = cost;
        return this;
    }

    /**
     * Get cost
     *
     * @return cost
     **/
    @JsonProperty("cost")
    public BigDecimal getCost() {
        return cost;
    }

    public void setCost(BigDecimal cost) {
        this.cost = cost;
    }

    public Quote estimatedAt(String estimatedAt) {
        this.estimatedAt = estimatedAt;
        return this;
    }

    /**
     * Unix epoch time string in milliseconds
     *
     * @return estimatedAt
     **/
    @JsonProperty("estimatedAt")
    public String getEstimatedAt() {
        return estimatedAt;
    }

    public void setEstimatedAt(String estimatedAt) {
        this.estimatedAt = estimatedAt;
    }

    public Quote pickUpDateTime(String pickUpDateTime) {
        this.pickUpDateTime = pickUpDateTime;
        return this;
    }

    /**
     * ISO8601 datetime string
     *
     * @return pickUpDateTime
     **/
    @JsonProperty("pickUpDateTime")
    public String getPickUpDateTime() {
        return pickUpDateTime;
    }

    public void setPickUpDateTime(String pickUpDateTime) {
        this.pickUpDateTime = pickUpDateTime;
    }

    public Quote pickUpAddressId(Integer pickUpAddressId) {
        this.pickUpAddressId = pickUpAddressId;
        return this;
    }

    /**
     * Get pickUpAddressId
     *
     * @return pickUpAddressId
     **/
    @JsonProperty("pickUpAddressId")
    public Integer getPickUpAddressId() {
        return pickUpAddressId;
    }

    public void setPickUpAddressId(Integer pickUpAddressId) {
        this.pickUpAddressId = pickUpAddressId;
    }

    public Quote pickUpAddress(Address pickUpAddress) {
        this.pickUpAddress = pickUpAddress;
        return this;
    }

    /**
     * Get pickUpAddress
     *
     * @return pickUpAddress
     **/
    @JsonProperty("pickUpAddress")
    public Address getPickUpAddress() {
        return pickUpAddress;
    }

    public void setPickUpAddress(Address pickUpAddress) {
        this.pickUpAddress = pickUpAddress;
    }

    public Quote shipToAddress(Address shipToAddress) {
        this.shipToAddress = shipToAddress;
        return this;
    }

    /**
     * Get shipToAddress
     *
     * @return shipToAddress
     **/
    @JsonProperty("shipToAddress")
    public Address getShipToAddress() {
        return shipToAddress;
    }

    public void setShipToAddress(Address shipToAddress) {
        this.shipToAddress = shipToAddress;
    }

    public Quote shipToAddressId(Integer shipToAddressId) {
        this.shipToAddressId = shipToAddressId;
        return this;
    }

    /**
     * Get shipToAddressId
     *
     * @return shipToAddressId
     **/
    @JsonProperty("shipToAddressId")
    public Integer getShipToAddressId() {
        return shipToAddressId;
    }

    public void setShipToAddressId(Integer shipToAddressId) {
        this.shipToAddressId = shipToAddressId;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Quote quote = (Quote) o;
        return Objects.equals(this.id, quote.id) &&
                Objects.equals(this.cost, quote.cost) &&
                Objects.equals(this.estimatedAt, quote.estimatedAt) &&
                Objects.equals(this.pickUpDateTime, quote.pickUpDateTime) &&
                Objects.equals(this.pickUpAddressId, quote.pickUpAddressId) &&
                Objects.equals(this.pickUpAddress, quote.pickUpAddress) &&
                Objects.equals(this.shipToAddress, quote.shipToAddress) &&
                Objects.equals(this.shipToAddressId, quote.shipToAddressId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, cost, estimatedAt, pickUpDateTime, pickUpAddressId, pickUpAddress, shipToAddress, shipToAddressId);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Quote {\n");

        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    cost: ").append(toIndentedString(cost)).append("\n");
        sb.append("    estimatedAt: ").append(toIndentedString(estimatedAt)).append("\n");
        sb.append("    pickUpDateTime: ").append(toIndentedString(pickUpDateTime)).append("\n");
        sb.append("    pickUpAddressId: ").append(toIndentedString(pickUpAddressId)).append("\n");
        sb.append("    pickUpAddress: ").append(toIndentedString(pickUpAddress)).append("\n");
        sb.append("    shipToAddress: ").append(toIndentedString(shipToAddress)).append("\n");
        sb.append("    shipToAddressId: ").append(toIndentedString(shipToAddressId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}


